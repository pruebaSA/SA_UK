<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="btnSave.ToolTip" xml:space="preserve">
    <value>Save schedule.</value>
  </data>
  <data name="ContentTitle.Text" xml:space="preserve">
    <value>&lt;span class="highlight" &gt;Availability&lt;/span&gt; Details...</value>
  </data>
  <data name="Header.Text" xml:space="preserve">
    <value>Add Staff Hours</value>
  </data>
  <data name="pnlRecurrence.HeaderText" xml:space="preserve">
    <value>Recurrence</value>
  </data>
  <data name="pnlSchedule.HeaderText" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="cbFriday.Text" xml:space="preserve">
    <value> Fri</value>
  </data>
  <data name="cbMonday.Text" xml:space="preserve">
    <value> Mon</value>
  </data>
  <data name="cbSaturday.Text" xml:space="preserve">
    <value> Sat</value>
  </data>
  <data name="cbSunday.Text" xml:space="preserve">
    <value> Sun</value>
  </data>
  <data name="cbThursday.Text" xml:space="preserve">
    <value> Thurs</value>
  </data>
  <data name="cbTuesday.Text" xml:space="preserve">
    <value> Tues</value>
  </data>
  <data name="cbWednessday.Text" xml:space="preserve">
    <value> Wed</value>
  </data>
  <data name="ddlStaff.ErrorMessage" xml:space="preserve">
    <value>Staff is a required field.</value>
  </data>
  <data name="lblMessage.Date.Before.Error" xml:space="preserve">
    <value>The time specified is no longer available on the site.</value>
  </data>
  <data name="lblMessage.Date.Error" xml:space="preserve">
    <value>Start time and end time must be on the same day.</value>
  </data>
  <data name="lblMessage.MinimumNumberOfScheduleMinutes.Error" xml:space="preserve">
    <value>Start time and end time must be at least {0} minutes apart.</value>
  </data>
  <data name="lblStaff.Text" xml:space="preserve">
    <value>Staff:</value>
  </data>
  <data name="lblStaff.ToolTip" xml:space="preserve">
    <value>Staff.</value>
  </data>
  <data name="lblStartTime.Text" xml:space="preserve">
    <value>Start Time:</value>
  </data>
  <data name="lblStartTime.ToolTip" xml:space="preserve">
    <value>The time the employee will be available.</value>
  </data>
  <data name="txtDate.RangeErrorMessage" xml:space="preserve">
    <value>Invalid date.</value>
  </data>
  <data name="txtDate.RequiredErrorMessage" xml:space="preserve">
    <value>Date is a required field.</value>
  </data>
  <data name="lblEndBy.Text" xml:space="preserve">
    <value>For the Next:</value>
  </data>
  <data name="lblEndTime.Text" xml:space="preserve">
    <value>End Time:</value>
  </data>
  <data name="lblEndTime.ToolTip" xml:space="preserve">
    <value>The time the employee will no longer be available.</value>
  </data>
  <data name="Calendar_Delete.Message" xml:space="preserve">
    <value>Are you sure?</value>
  </data>
  <data name="btnPurge.Text" xml:space="preserve">
    <value>Purge Calendar</value>
  </data>
  <data name="pnlMaintenance.HeaderText" xml:space="preserve">
    <value>Maintenance</value>
  </data>
  <data name="Text.PurgeCalendar" xml:space="preserve">
    <value>&lt;p&gt;This feature allows you to clean up your calendar automatically by purging previous dates from your calendar that are no longer in use. SalonAddict may purge this information automatically without notice.&lt;br/&gt;&lt;b&gt;Note: this is an irreversible process.&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;Salons are encouraged to use this feature regularly.&lt;/b&gt;&lt;/p&gt;</value>
  </data>
  <data name="btnPurge.OnClientClick" xml:space="preserve">
    <value>return confirm('Are you sure?');</value>
  </data>
  <data name="lblDate.Text" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="lblDate.ToolTip" xml:space="preserve">
    <value>The date the employee will be available.</value>
  </data>
  <data name="lblEndBy.ToolTip" xml:space="preserve">
    <value>The number of days to recur the staff's availability.</value>
  </data>
  <data name="lblRecure.Text" xml:space="preserve">
    <value>Recur Every:</value>
  </data>
  <data name="lblRecure.ToolTip" xml:space="preserve">
    <value>The days of the week the staff will be available.</value>
  </data>
  <data name="ddlDays.ListItem.Text" xml:space="preserve">
    <value>{0} day(s)</value>
  </data>
</root>